<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://alinqa.github.io/atom.xml" rel="self"/>
  
  <link href="https://alinqa.github.io/"/>
  <updated>2021-10-29T15:31:36.149Z</updated>
  <id>https://alinqa.github.io/</id>
  
  <author>
    <name>AlinQa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>c语言</title>
    <link href="https://alinqa.github.io/2021/10/29/c%E8%AF%AD%E8%A8%80-0/"/>
    <id>https://alinqa.github.io/2021/10/29/c%E8%AF%AD%E8%A8%80-0/</id>
    <published>2021-10-29T15:31:36.000Z</published>
    <updated>2021-10-29T15:31:36.149Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>试水</title>
    <link href="https://alinqa.github.io/2021/10/27/%E8%AF%95%E6%B0%B4/"/>
    <id>https://alinqa.github.io/2021/10/27/%E8%AF%95%E6%B0%B4/</id>
    <published>2021-10-27T15:06:44.000Z</published>
    <updated>2021-10-27T15:06:44.943Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>进制转换</title>
    <link href="https://alinqa.github.io/2021/10/27/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-1/"/>
    <id>https://alinqa.github.io/2021/10/27/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-1/</id>
    <published>2021-10-27T09:28:38.000Z</published>
    <updated>2021-10-27T09:30:25.527Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C的进制转换"><a href="#C的进制转换" class="headerlink" title="C的进制转换"></a>C的进制转换</h1><h2 id="将二进制、八进制、十六进制转换为十进制"><a href="#将二进制、八进制、十六进制转换为十进制" class="headerlink" title="将二进制、八进制、十六进制转换为十进制"></a>将二进制、八进制、十六进制转换为十进制</h2><p>二进制、八进制和十六进制向十进制转换都是“按权相加”。所谓“权”，也即“位权”。</p><p>假设当前数字是 N 进制，那么：</p><ul><li>对于整数部分，从右往左看，第 i 位的位权等于Ni-1</li><li>对于小数部分，恰好相反，要<em>从左往右看</em>，第 j 位的位权为N-j。</li><li>更加通俗的理解是，假设一个多位数（由多个数字组成的数）某位上的数字是 1，那么它所表示的数值大小就是该位的位权。</li></ul><h4 id="1-整数部分"><a href="#1-整数部分" class="headerlink" title="1) 整数部分"></a>1) 整数部分</h4><p>例如，将八进制数字 53627 转换成十进制：</p><p>53627 ( 八进制 ) = 5×84 + 3×83 + 6×82 + 2×81 + 7×80 = 22423（十进制）</p><p>从右往左看，第1位的位权为 80=1，第2位的位权为 81=8，第3位的位权为 82=64，第4位的位权为 83=512，第5位的位权为 84=4096 …… 第n位的位权就为 8n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><p>//注意，这里我们需要以十进制形式来表示位权。</p><p>再如，将十六进制数字 9FA8C 转换成十进制：</p><p>9FA8C （十六进制）= 9×164 + 15×163 + 10×162 + 8×161 + 12×160 = 653964（十进制）</p><p>从右往左看，第1位的位权为 160=1，第2位的位权为 161=16，第3位的位权为 162=256，第4位的位权为 163=4096，第5位的位权为 164=65536 …… 第n位的位权就为 16n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><p> 将二进制数字转换成十进制也是类似的道理：</p><p>11010 = 1×24 + 1×23 + 0×22 + 1×21 + 0×20 = 26（十进制）</p><p>从右往左看，第1位的位权为 20=1，第2位的位权为 21=2，第3位的位权为 22=4，第4位的位权为 23=8，第5位的位权为 24=16 …… 第n位的位权就为 2n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><h4 id="2-小数部分"><a href="#2-小数部分" class="headerlink" title="2) 小数部分"></a>2) 小数部分</h4><p>例如，将八进制数字 423.5176 转换成十进制：</p><p>423.5176 = 4×82 + 2×81 + 3×80 + 5×8-1 + 1×8-2 + 7×8-3 + 6×8-4 = 275.65576171875（十进制）</p><p>小数部分和整数部分相反，要从左往右看，第1位的位权为 8-1=1/8，第2位的位权为 8-2=1/64，第3位的位权为 8-3=1/512，第4位的位权为 8-4=1/4096 …… 第m位的位权就为 8-m。</p><p> 再如，将二进制数字 1010.1101 转换成十进制：</p><p>1010.1101 = 1×23 + 0×22 + 1×21 + 0×20 + 1×2-1 + 1×2-2 + 0×2-3 + 1×2-4 = 10.8125（十进制）</p><p>小数部分和整数部分相反，要<em>从左往右看</em>，第1位的位权为 2-1=1/2，第2位的位权为 2-2=1/4，第3位的位权为 2-3=1/8，第4位的位权为 2-4=1/16 …… 第m位的位权就为 2-m。</p><p> 更多转换成十进制的例子：</p><ul><li><p>二进制：1001 = 1×23 + 0×22 + 0×21 + 1×20 = 8 + 0 + 0 + 1 = 9（十进制）</p></li><li><p>二进制：101.1001 = 1×22 + 0×21 + 1×20 + 1×2-1 + 0×2-2 + 0×2-3 + 1×2-4 = 4 + 0 + 1 + 0.5 + 0 + 0 + 0.0625 = 5.5625（十进制）</p></li><li><p>八进制：302 = 3×82 + 0×81 + 2×80 = 192 + 0 + 2 = 194（十进制）</p></li><li><p>八进制：302.46 = 3×82 + 0×81 + 2×80 + 4×8-1 + 6×8-2 = 192 + 0 + 2 + 0.5 + 0.09375= 194.59375（十进制）</p></li><li><p>十六进制：EA7 = 14×162 + 10×161 + 7×160 = 3751（十进制）</p></li></ul><h2 id="将十进制转换为二进制、八进制、十六进制"><a href="#将十进制转换为二进制、八进制、十六进制" class="headerlink" title="将十进制转换为二进制、八进制、十六进制"></a>将十进制转换为二进制、八进制、十六进制</h2><h4 id="1-整数部分-1"><a href="#1-整数部分-1" class="headerlink" title="1) 整数部分"></a>1) 整数部分</h4><p>十进制整数转换为 N 进制整数采用“除 N 取余，逆序排列”法。具体做法是：</p><ul><li>将 N 作为除数，用十进制整数除以 N，可以得到一个商和余数；</li><li>保留余数，用商继续除以 N，又得到一个新的商和余数；</li><li>仍然保留余数，用商继续除以 N，还会得到一个新的商和余数；</li><li>……</li><li>如此反复进行，每次都保留余数，用商接着除以 N，直到商为 0 时为止。</li></ul><p> 把先得到的余数作为 N 进制数的低位数字，后得到的余数作为 N 进制数的高位数字，依次排列起来，就得到了 N 进制数字。</p><h4 id="2-小数部分-1"><a href="#2-小数部分-1" class="headerlink" title="2) 小数部分"></a>2) 小数部分</h4><p>十进制小数转换成 N 进制小数采用“乘 N 取整，顺序排列”法。具体做法是：</p><ul><li>用 N 乘以十进制小数，可以得到一个积，这个积包含了整数部分和小数部分；</li><li>将积的整数部分取出，再用 N 乘以余下的小数部分，又得到一个新的积；</li><li>再将积的整数部分取出，继续用 N 乘以余下的小数部分；</li><li>……</li><li>如此反复进行，每次都取出整数部分，用 N 接着乘以小数部分，直到积中的小数部分为 0，或者达到所要求的精度为止。</li></ul><p> 把取出的整数部分按顺序排列起来，先取出的整数作为 N 进制小数的高位数字，后取出的整数作为低位数字，这样就得到了 N 进制小数。</p><p>注：如果一个数字既包含了整数部分又包含了小数部分，那么将整数部分和小数部分开，分别按照上面的方法完成转换，然后再合并在一起即可。例如：</p><ul><li><p>十进制数字 36926.930908203125 转换成八进制的结果为 110076.7345；</p></li><li><p>十进制数字 42.6875 转换成二进制的结果为 101010.1011。</p></li></ul><p>注：十进制小数转换成其他进制小数时，结果有可能是一个无限位的小数。请看下面的例子：</p><ul><li>十进制 0.51 对应的二进制为 0.100000101000111101011100001010001111010111…，是一个循环小数；</li><li>十进制 0.72 对应的二进制为 0.1011100001010001111010111000010100011110…，是一个循环小数；</li><li>十进制 0.625 对应的二进制为 0.101，是一个有限小数。</li></ul><h2 id="二进制和八进制、十六进制的转换"><a href="#二进制和八进制、十六进制的转换" class="headerlink" title="二进制和八进制、十六进制的转换"></a>二进制和八进制、十六进制的转换</h2><h4 id="1-二进制整数和八进制整数之间的转换"><a href="#1-二进制整数和八进制整数之间的转换" class="headerlink" title="1) 二进制整数和八进制整数之间的转换"></a>1) 二进制整数和八进制整数之间的转换</h4><p>1.二进制整数转换为八进制整数时，每三位二进制数字转换为一位八进制数字，运算的顺序是从低位向高位依次进行，高位不足三位用零补齐。</p><p>2.八进制整数转换为二进制整数时，思路是相反的，每一位八进制数字转换为三位二进制数字，运算的顺序也是从低位向高位依次进行。</p><h4 id="2-二进制整数和十六进制整数之间的转换"><a href="#2-二进制整数和十六进制整数之间的转换" class="headerlink" title="2) 二进制整数和十六进制整数之间的转换"></a>2) 二进制整数和十六进制整数之间的转换</h4><p>1.二进制整数转换为十六进制整数时，每四位二进制数字转换为一位十六进制数字，运算的顺序是从低位向高位依次进行，高位不足四位用零补齐。</p><p>2.十六进制整数转换为二进制整数时，思路是相反的，每一位十六进制数字转换为四位二进制数字，运算的顺序也是从低位向高位依次进行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C的进制转换&quot;&gt;&lt;a href=&quot;#C的进制转换&quot; class=&quot;headerlink&quot; title=&quot;C的进制转换&quot;&gt;&lt;/a&gt;C的进制转换&lt;/h1&gt;&lt;h2 id=&quot;将二进制、八进制、十六进制转换为十进制&quot;&gt;&lt;a href=&quot;#将二进制、八进制、十六进制转换为十进</summary>
      
    
    
    
    <category term="web前端" scheme="https://alinqa.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="博客" scheme="https://alinqa.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://alinqa.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>进制转换</title>
    <link href="https://alinqa.github.io/2021/10/27/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    <id>https://alinqa.github.io/2021/10/27/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</id>
    <published>2021-10-27T09:07:48.000Z</published>
    <updated>2021-10-27T09:27:23.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C的进制转换"><a href="#C的进制转换" class="headerlink" title="C的进制转换"></a>C的进制转换</h1><h2 id="将二进制、八进制、十六进制转换为十进制"><a href="#将二进制、八进制、十六进制转换为十进制" class="headerlink" title="将二进制、八进制、十六进制转换为十进制"></a>将二进制、八进制、十六进制转换为十进制</h2><p>二进制、八进制和十六进制向十进制转换都是“按权相加”。所谓“权”，也即“位权”。</p><p>假设当前数字是 N 进制，那么：</p><ul><li>对于整数部分，从右往左看，第 i 位的位权等于Ni-1</li><li>对于小数部分，恰好相反，要<em>从左往右看</em>，第 j 位的位权为N-j。</li><li>更加通俗的理解是，假设一个多位数（由多个数字组成的数）某位上的数字是 1，那么它所表示的数值大小就是该位的位权。</li></ul><h4 id="1-整数部分"><a href="#1-整数部分" class="headerlink" title="1) 整数部分"></a>1) 整数部分</h4><p>例如，将八进制数字 53627 转换成十进制：</p><p>53627 ( 八进制 ) = 5×84 + 3×83 + 6×82 + 2×81 + 7×80 = 22423（十进制）</p><p>从右往左看，第1位的位权为 80=1，第2位的位权为 81=8，第3位的位权为 82=64，第4位的位权为 83=512，第5位的位权为 84=4096 …… 第n位的位权就为 8n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><p>//注意，这里我们需要以十进制形式来表示位权。</p><p>再如，将十六进制数字 9FA8C 转换成十进制：</p><p>9FA8C （十六进制）= 9×164 + 15×163 + 10×162 + 8×161 + 12×160 = 653964（十进制）</p><p>从右往左看，第1位的位权为 160=1，第2位的位权为 161=16，第3位的位权为 162=256，第4位的位权为 163=4096，第5位的位权为 164=65536 …… 第n位的位权就为 16n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><p> 将二进制数字转换成十进制也是类似的道理：</p><p>11010 = 1×24 + 1×23 + 0×22 + 1×21 + 0×20 = 26（十进制）</p><p>从右往左看，第1位的位权为 20=1，第2位的位权为 21=2，第3位的位权为 22=4，第4位的位权为 23=8，第5位的位权为 24=16 …… 第n位的位权就为 2n-1。将各个位的数字乘以位权，然后再相加，就得到了十进制形式。</p><h4 id="2-小数部分"><a href="#2-小数部分" class="headerlink" title="2) 小数部分"></a>2) 小数部分</h4><p>例如，将八进制数字 423.5176 转换成十进制：</p><p>423.5176 = 4×82 + 2×81 + 3×80 + 5×8-1 + 1×8-2 + 7×8-3 + 6×8-4 = 275.65576171875（十进制）</p><p>小数部分和整数部分相反，要从左往右看，第1位的位权为 8-1=1/8，第2位的位权为 8-2=1/64，第3位的位权为 8-3=1/512，第4位的位权为 8-4=1/4096 …… 第m位的位权就为 8-m。</p><p> 再如，将二进制数字 1010.1101 转换成十进制：</p><p>1010.1101 = 1×23 + 0×22 + 1×21 + 0×20 + 1×2-1 + 1×2-2 + 0×2-3 + 1×2-4 = 10.8125（十进制）</p><p>小数部分和整数部分相反，要<em>从左往右看</em>，第1位的位权为 2-1=1/2，第2位的位权为 2-2=1/4，第3位的位权为 2-3=1/8，第4位的位权为 2-4=1/16 …… 第m位的位权就为 2-m。</p><p> 更多转换成十进制的例子：</p><ul><li><p>二进制：1001 = 1×23 + 0×22 + 0×21 + 1×20 = 8 + 0 + 0 + 1 = 9（十进制）</p></li><li><p>二进制：101.1001 = 1×22 + 0×21 + 1×20 + 1×2-1 + 0×2-2 + 0×2-3 + 1×2-4 = 4 + 0 + 1 + 0.5 + 0 + 0 + 0.0625 = 5.5625（十进制）</p></li><li><p>八进制：302 = 3×82 + 0×81 + 2×80 = 192 + 0 + 2 = 194（十进制）</p></li><li><p>八进制：302.46 = 3×82 + 0×81 + 2×80 + 4×8-1 + 6×8-2 = 192 + 0 + 2 + 0.5 + 0.09375= 194.59375（十进制）</p></li><li><p>十六进制：EA7 = 14×162 + 10×161 + 7×160 = 3751（十进制）</p></li></ul><h2 id="将十进制转换为二进制、八进制、十六进制"><a href="#将十进制转换为二进制、八进制、十六进制" class="headerlink" title="将十进制转换为二进制、八进制、十六进制"></a>将十进制转换为二进制、八进制、十六进制</h2><h4 id="1-整数部分-1"><a href="#1-整数部分-1" class="headerlink" title="1) 整数部分"></a>1) 整数部分</h4><p>十进制整数转换为 N 进制整数采用“除 N 取余，逆序排列”法。具体做法是：</p><ul><li>将 N 作为除数，用十进制整数除以 N，可以得到一个商和余数；</li><li>保留余数，用商继续除以 N，又得到一个新的商和余数；</li><li>仍然保留余数，用商继续除以 N，还会得到一个新的商和余数；</li><li>……</li><li>如此反复进行，每次都保留余数，用商接着除以 N，直到商为 0 时为止。</li></ul><p> 把先得到的余数作为 N 进制数的低位数字，后得到的余数作为 N 进制数的高位数字，依次排列起来，就得到了 N 进制数字。</p><h4 id="2-小数部分-1"><a href="#2-小数部分-1" class="headerlink" title="2) 小数部分"></a>2) 小数部分</h4><p>十进制小数转换成 N 进制小数采用“乘 N 取整，顺序排列”法。具体做法是：</p><ul><li>用 N 乘以十进制小数，可以得到一个积，这个积包含了整数部分和小数部分；</li><li>将积的整数部分取出，再用 N 乘以余下的小数部分，又得到一个新的积；</li><li>再将积的整数部分取出，继续用 N 乘以余下的小数部分；</li><li>……</li><li>如此反复进行，每次都取出整数部分，用 N 接着乘以小数部分，直到积中的小数部分为 0，或者达到所要求的精度为止。</li></ul><p> 把取出的整数部分按顺序排列起来，先取出的整数作为 N 进制小数的高位数字，后取出的整数作为低位数字，这样就得到了 N 进制小数。</p><p>注：如果一个数字既包含了整数部分又包含了小数部分，那么将整数部分和小数部分开，分别按照上面的方法完成转换，然后再合并在一起即可。例如：</p><ul><li><p>十进制数字 36926.930908203125 转换成八进制的结果为 110076.7345；</p></li><li><p>十进制数字 42.6875 转换成二进制的结果为 101010.1011。</p></li></ul><p>注：十进制小数转换成其他进制小数时，结果有可能是一个无限位的小数。请看下面的例子：</p><ul><li>十进制 0.51 对应的二进制为 0.100000101000111101011100001010001111010111…，是一个循环小数；</li><li>十进制 0.72 对应的二进制为 0.1011100001010001111010111000010100011110…，是一个循环小数；</li><li>十进制 0.625 对应的二进制为 0.101，是一个有限小数。</li></ul><h2 id="二进制和八进制、十六进制的转换"><a href="#二进制和八进制、十六进制的转换" class="headerlink" title="二进制和八进制、十六进制的转换"></a>二进制和八进制、十六进制的转换</h2><h4 id="1-二进制整数和八进制整数之间的转换"><a href="#1-二进制整数和八进制整数之间的转换" class="headerlink" title="1) 二进制整数和八进制整数之间的转换"></a>1) 二进制整数和八进制整数之间的转换</h4><p>1.二进制整数转换为八进制整数时，每三位二进制数字转换为一位八进制数字，运算的顺序是从低位向高位依次进行，高位不足三位用零补齐。</p><p>2.八进制整数转换为二进制整数时，思路是相反的，每一位八进制数字转换为三位二进制数字，运算的顺序也是从低位向高位依次进行。</p><h4 id="2-二进制整数和十六进制整数之间的转换"><a href="#2-二进制整数和十六进制整数之间的转换" class="headerlink" title="2) 二进制整数和十六进制整数之间的转换"></a>2) 二进制整数和十六进制整数之间的转换</h4><p>1.二进制整数转换为十六进制整数时，每四位二进制数字转换为一位十六进制数字，运算的顺序是从低位向高位依次进行，高位不足四位用零补齐。</p><p>2.十六进制整数转换为二进制整数时，思路是相反的，每一位十六进制数字转换为四位二进制数字，运算的顺序也是从低位向高位依次进行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C的进制转换&quot;&gt;&lt;a href=&quot;#C的进制转换&quot; class=&quot;headerlink&quot; title=&quot;C的进制转换&quot;&gt;&lt;/a&gt;C的进制转换&lt;/h1&gt;&lt;h2 id=&quot;将二进制、八进制、十六进制转换为十进制&quot;&gt;&lt;a href=&quot;#将二进制、八进制、十六进制转换为十进</summary>
      
    
    
    
    <category term="web前端" scheme="https://alinqa.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="博客" scheme="https://alinqa.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://alinqa.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>深刻教训</title>
    <link href="https://alinqa.github.io/2021/10/23/%E6%B7%B1%E5%88%BB%E6%95%99%E8%AE%AD/"/>
    <id>https://alinqa.github.io/2021/10/23/%E6%B7%B1%E5%88%BB%E6%95%99%E8%AE%AD/</id>
    <published>2021-10-23T07:42:21.000Z</published>
    <updated>2021-10-23T07:49:22.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="深刻教训"><a href="#深刻教训" class="headerlink" title="深刻教训"></a>深刻教训</h1><p>真的是“血”的教训，创建完博客以后”node””git“等文件一定不能随便乱移动文件的位置（在不记得路径的情况下）如果随便乱移了，那么恭喜你，你将会收获系统的一系列”command not found”。</p><p>  面对这种情况往往有多种解决方法：(对于小白的我来说只知道两种)</p><p>1.首先打开我的电脑，右击并选择属性，打开最左侧一栏控制面板主页的高级系统设置，选择环境变量，在path中添加文件所在路径，最后按确定即可。</p><p>2.直接百度去官网下载一个新的文件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;深刻教训&quot;&gt;&lt;a href=&quot;#深刻教训&quot; class=&quot;headerlink&quot; title=&quot;深刻教训&quot;&gt;&lt;/a&gt;深刻教训&lt;/h1&gt;&lt;p&gt;真的是“血”的教训，创建完博客以后”node””git“等文件一定不能随便乱移动文件的位置（在不记得路径的情况下）如果随便乱</summary>
      
    
    
    
    <category term="web前端" scheme="https://alinqa.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="博客" scheme="https://alinqa.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://alinqa.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="https://alinqa.github.io/2021/10/21/post-1/"/>
    <id>https://alinqa.github.io/2021/10/21/post-1/</id>
    <published>2021-10-21T08:24:29.000Z</published>
    <updated>2021-10-21T08:24:29.727Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>post</title>
    <link href="https://alinqa.github.io/2021/09/24/post/"/>
    <id>https://alinqa.github.io/2021/09/24/post/</id>
    <published>2021-09-24T02:27:58.000Z</published>
    <updated>2021-09-24T02:27:58.077Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>first</title>
    <link href="https://alinqa.github.io/2021/09/24/first-0/"/>
    <id>https://alinqa.github.io/2021/09/24/first-0/</id>
    <published>2021-09-24T02:19:25.000Z</published>
    <updated>2021-09-24T02:27:19.855Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一次写博客"><a href="#第一次写博客" class="headerlink" title="第一次写博客"></a>第一次写博客</h1><ul><li>一个真正的计算机小白写的第一篇博客：就先从创建博客遇到的第一个困难来说吧,在b站的相关教程视频其中有一个在操作“Sublime Text”的过程中应该输入“Branch:main”而不是视频中up主所操作的”Branch:master”</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一次写博客&quot;&gt;&lt;a href=&quot;#第一次写博客&quot; class=&quot;headerlink&quot; title=&quot;第一次写博客&quot;&gt;&lt;/a&gt;第一次写博客&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;一个真正的计算机小白写的第一篇博客：就先从创建博客遇到的第一个困难来说吧,在b站的相关教程视频其</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://alinqa.github.io/2021/09/18/hello-world/"/>
    <id>https://alinqa.github.io/2021/09/18/hello-world/</id>
    <published>2021-09-18T05:32:18.917Z</published>
    <updated>2021-09-18T05:42:32.728Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
